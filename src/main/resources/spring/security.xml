<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-4.0.xsd http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--<debug/>-->

    <!--static url pattern-->
    <http pattern="/static/**" security="none"/>
    <!--Ignore /test,  /public -->
    <http pattern="/public/**" security="none"/>
    <http pattern="/api/register/**" security="none"/>

    <!--<mvc:annotation-driven/>-->
    <mvc:annotation-driven validator="webGlobalValidator"/>
    <mvc:default-servlet-handler/>


    <http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="oauth2AuthenticationManager"
          entry-point-ref="oauth2AuthenticationEntryPoint" use-expressions="false">
        <intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>
        <anonymous enabled="false"/>
        <http-basic entry-point-ref="oauth2AuthenticationEntryPoint"/>

        <custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER"/>
        <access-denied-handler ref="oauth2AccessDeniedHandler"/>
        <csrf disabled="true"/>
    </http>


    <beans:bean id="clientCredentialsTokenEndpointFilter"
                class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="oauth2AuthenticationManager"/>
    </beans:bean>


    <!--RP API  configuration-->
    <http pattern="/api/application/**" create-session="never" entry-point-ref="oauth2AuthenticationEntryPoint"
          access-decision-manager-ref="oauth2AccessDecisionManager" use-expressions="false">
        <anonymous enabled="false"/>

        <intercept-url pattern="/api/application/**" access="ROLE_APPLICATION_CLIENT,SCOPE_READ"/>

        <custom-filter ref="appResourceServer" before="PRE_AUTH_FILTER"/>
        <access-denied-handler ref="oauth2AccessDeniedHandler"/>
        <csrf disabled="true"/>
    </http>


    <!--RP resource server filter-->
    <oauth2:resource-server id="appResourceServer" resource-id="app-server-resource"
                            token-services-ref="tokenServices"/>


    <!--Config ClientDetailsService-->
    <beans:bean id="clientDetailsService" class="com.tencent.oauth.service.oauth.JDBCClientDetailsService">
        <beans:constructor-arg index="0" ref="dataSource"/>
    </beans:bean>


    <!--Config token services-->
    <beans:bean id="tokenStore" class="com.tencent.oauth.service.oauth.JDBCTokenStore">
        <beans:constructor-arg index="0" ref="dataSource"/>
    </beans:bean>


    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="clientDetailsService" ref="clientDetailsService"/>
        <beans:property name="supportRefreshToken" value="true"/>
        <!--<beans:property name="accessTokenValiditySeconds" value="2592000"/>-->
    </beans:bean>

    <!--<global-method-security pre-post-annotations="enabled" proxy-target-class="true">-->
    <!--<expression-handler ref="oauth2ExpressionHandler"/>-->
    <!--</global-method-security>-->

    <!--<oauth2:expression-handler id="oauth2ExpressionHandler"/>-->
    <!--<oauth2:web-expression-handler id="oauth2WebExpressionHandler"/>-->

    <beans:bean class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory"
                id="oAuth2RequestFactory">
        <beans:constructor-arg name="clientDetailsService" ref="clientDetailsService"/>
    </beans:bean>

    <beans:bean id="oauthUserApprovalHandler"
                class="com.tencent.oauth.infrastructure.oauth.OauthUserApprovalHandler">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="clientDetailsService" ref="clientDetailsService"/>
        <beans:property name="requestFactory" ref="oAuth2RequestFactory"/>
        <beans:property name="oauthService" ref="oauthService"/>
    </beans:bean>


    <oauth2:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
                                 user-approval-handler-ref="oauthUserApprovalHandler"
                                 user-approval-page="oauth_approval"
                                 error-page="oauth_error">
        <oauth2:authorization-code disabled="true"/>
        <oauth2:implicit disabled="true"/>
        <oauth2:refresh-token disabled="true"/>
        <oauth2:client-credentials/>
        <!--<oauth2:password authentication-manager-ref="authenticationManagerIDs"/>-->
        <oauth2:password/>
    </oauth2:authorization-server>


    <!--<authentication-manager id="authenticationManagerIDs">-->
    <!--<authentication-provider user-service-ref="userAPIService">-->
    <!--<password-encoder hash="sha-256">-->
    <!--<salt-source system-wide="ids"/>-->
    <!--</password-encoder>-->
    <!--</authentication-provider>-->
    <!--</authentication-manager>-->


    <beans:bean id="oauth2AuthenticationEntryPoint"
                class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>


    <beans:bean id="oauth2ClientDetailsUserService"
                class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetailsService"/>
    </beans:bean>

    <authentication-manager id="oauth2AuthenticationManager">
        <authentication-provider user-service-ref="oauth2ClientDetailsUserService"/>
    </authentication-manager>

    <beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>


    <beans:bean id="oauth2AccessDeniedHandler"
                class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>


    <http use-expressions="false" authentication-manager-ref="authenticationManager">
        <intercept-url pattern="/oauth/**" access="ROLE_EMM_SERVER,ROLE_TOKEN_AGENT_USER,ROLE_OAUTH_RP"/>

        <!--<intercept-url pattern="/system/user/**" access="ROLE_SYSTEM_ACCOUNT"/>-->

        <!--Ignore login-->
        <intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>

        <intercept-url pattern="/system/**" access="ROLE_SYSTEM_ROOT"/>
        <intercept-url pattern="/account/**" access="ROLE_MANUFACTURER_ACCOUNT"/>

        <intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY"/>

        <form-login authentication-failure-url="/login?authentication_error=1"
                    login-page="/login" login-processing-url="/signin"
                authentication-success-handler-ref="loginSuccessHandler"
                authentication-failure-handler-ref="loginFailedHandler"/>
        <logout logout-success-url="/index" logout-url="/signout" delete-cookies="idsToken"/>
        <anonymous/>
        <access-denied-handler error-page="/login?authorization_error=2"/>
       <csrf disabled="true"/>
    </http>


    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userService">
            <password-encoder hash="sha-256">
                <salt-source user-property="username"/>
            </password-encoder>
        </authentication-provider>
    </authentication-manager>

    <!--Support spring security tag on jsp-->
    <beans:bean class="org.springframework.security.oauth2.provider.expression.OAuth2WebSecurityExpressionHandler"
                id="securityExpressionHandler"/>
    <!--login success -->
    <beans:bean id="loginSuccessHandler" class="com.tencent.commons.web.AuthenticateSuccessHandler"/>
    <!--login failed -->
    <beans:bean id="loginFailedHandler" class="com.tencent.commons.web.AuthenticateFailedHandler"/>
    <!--
    Oauth server end.............
    -->

    <beans:bean class="com.tencent.oauth.domain.security.SecurityUtils">
        <beans:property name="securityHolder">
            <beans:bean class="com.tencent.oauth.domain.security.SpringSecurityHolder"/>
        </beans:property>
    </beans:bean>


</beans:beans>